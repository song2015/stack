
public class MyLinkedList {

	public static void main(String[] args) {
		MyOwnLinkedList l=new MyOwnLinkedList();
		
		try{
			l.getHead();
		}
		catch(Exception e){
			System.out.println("noHead");
		}

		l.addLinkedList("apple");
		l.addLinkedList("banana");
		l.addLinkedList("orange");

		System.out.println(l.getHead());
	
		System.out.println(l.getLast());

		l.removeLastNode();

		System.out.println(l.getLast());
		
		System.out.println(l.size());
		
		try{
			l.removeLastNode();
		}
		catch(Exception e){
			System.out.println("noElement");
		}
		
		try{
			l.removeLastNode();
		}
		catch(Exception e){
			System.out.println("noElement");
		}

	}

}

class MyOwnLinkedList{

	private MyNode head;
	private MyNode tail;
	private MyNode currentNode;

	public String getHead() {
		if(head.getStr()==null) 
			throw new IndexOutOfBoundsException();
		else
			return head.getStr();
	}

	public boolean addLinkedList(String a){
		MyNode no = new MyNode(a);
		
		if(head==null) {
			head=no;
			currentNode=head;
		}else
		{
			tail=currentNode;
			tail.addNextNode(no);
			currentNode=no;
			tail=no;
		}	
		return true;		    
	}

	public boolean removeLastNode(){
		if(head==null) 
			throw new IndexOutOfBoundsException();
		else
		{
			MyNode pre=head;
			MyNode curr = head.getNextNode();

			while(curr!= tail){
				curr = curr.next;
				pre = pre.next;
			}

			pre.next = curr.next;
			curr.next = null;
			tail=pre;
		}	
		return true;		    
	}

	public int size() {
		int count =0;
		MyNode p = head;
		while (p!= null) {
			count++;
			p = p.getNextNode();
		}
		return count;
	}

	public String getFirst(){
		return head.getStr();
	}

	public String getLast(){
		return tail.getStr();
	}


}

