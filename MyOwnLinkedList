
public class MyLinkedList {

	public static void main(String[] args) {
		MyOwnLinkedList l=new MyOwnLinkedList();
		MyNode no1 = new MyNode("apple");
		MyNode no2 = new MyNode("banana");
		MyNode no3 = new MyNode("orange");
		
		try{
			l.getHead();
		}
		catch(Exception e){
			System.out.println("error");
		}
		
		l.addLinkedList(no1);
		l.addLinkedList(no2);
		

	}

}

class MyOwnLinkedList extends Node{

	public MyNode node=new MyNode(null);

	private MyNode head;
	private MyNode tail;
	private MyNode currentNode;
	private int size;

	public MyNode getHead() {
		if(head.getStr()==null) 
			throw new IndexOutOfBoundsException();
		else
			return head;
	}

	public boolean addLinkedList(MyNode a){
		if(head==null) {
			head=a;
		}else
		{
			tail.addNextNode(a);	
		}	
		return true;		    
	}
	
	public boolean removeLastNode(){
		if(head==null) 
			throw new IndexOutOfBoundsException();
		else
		{
			tail=null;	
		}	
		return true;		    
	}

	public MyNode next(){
		MyNode next= currentNode.getNextNode();
		currentNode = next;
		return next;
	}

	public int size() {
		int count = 0;
		MyNode p = head;
		while (p.getStr() != null) {
			count++;
			p = p.getNextNode();
		}
		return count;
	}

	public String getFirst(){
		return head.getStr();
	}

	public MyNode getLast(){
		int count = 0;
		MyNode p = head;
		while (p.getStr() != null) {
			count++;
			p = p.getNextNode();
		}
		for(int i=1;i<=count;i++){
			p = p.getNextNode();
		}

		return p;
	}


}

