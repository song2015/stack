import java.util.ArrayList;


public class CardTest {	

	public static void main(String[] args){

		Card cardA = new Card(Card.CardPicture.HEART,1); //注意enum用法

		Card cardB = new Card(Card.CardPicture.CLUB, 2);
		Card cardC = new Card(Card.CardPicture.CLUB, 10);

		System.out.println(cardA);
		System.out.println(cardB);
		System.out.println(cardC);

		cardA.compareTo(cardB);
		cardA.compareTo(cardC);	
		cardB.compareTo(cardC);	
		cardA.compareTo(cardA);	

		System.out.println(cardA.toString());		

		System.out.println(cardA.getStringNumber());		
		System.out.println(cardB.getStringNumber());
		
		cardA.printCard();
		
		Card[] array1={cardA,cardB,cardC};
		
		cardA.permutation(array1);

	}

	

}


class Card
{
	private static final Card Card = null;
	private CardPicture picture;
	private int number;
	

	public enum CardPicture{
		HEART,CLUB,DIAMOND,SPADE
	}

	public Card(CardPicture p,int num){
		picture=p;
		number=num;
	}

	public static void permutation(Card[] arr){
		int l= arr.length;
		if (l>0){
			if(l==1) {
				System.out.println(arr[0].toString());
				return;
			}
			else if(l==2){
				printArray(arr);
				exchange(arr,0,1);
				printArray(arr);
				exchange(arr,0,1);
				return;
			}
			else if(l>2){
				for(int n=0;n<l;n++){
					exchange(arr,n,l-1);

					Card[] arrNew = new Card[l-2];
					for(int i = 0; i < l-1; i++) {
						arrNew[i] = arr[i];
					}

					permutation(arrNew);
					exchange(arr,n,l-1);
				}
				return;
			}	
		}
	}

	public static void exchange(Card[] arr1,int i,int j){
		Card temp;
		temp=arr1[i];
		arr1[i]=arr1[j];
		arr1[j]=temp;
	}

	public static void printArray(Card arr2[]){
		int l=arr2.length;
		for(int k=0;k<l;k++){
			System.out.print(arr2[k].toString()+" ");//不换行
		}
		System.out.println();//换行
	}


	public String toString() {
		String symbol;

		if (picture == CardPicture.HEART)
			symbol = "红心";
		else if (picture == CardPicture.DIAMOND)
			symbol = "方块";
		else if (picture == CardPicture.SPADE)
			symbol = "黑桃";
		else
			symbol = "梅花";

		return symbol + "  " + this.getStringNumber() + "  ";	
	}
	
	public void printCard() {
		String symbol;

		if (picture == CardPicture.HEART)
			symbol = "♥";
		else if (picture == CardPicture.DIAMOND)
			symbol = "♦";
		else if (picture == CardPicture.SPADE)
			symbol = "♠";
		else
			symbol = "♣";
		System.out.println("┌────────┐");
		System.out.println("│"+symbol + " " + this.getStringNumber() + "     "+"│");	
		System.out.println("│        │");
		System.out.println("│        │");
		System.out.println("└────────┘");
	}

	public CardPicture getPicture(){
		return picture;
	}

	public String getStringNumber(){
		if (number == 11) {
			return "J";
		} else if (number == 12) {
			return "Q";
		} else if (number == 13) {
			return "K";
		} else if (number == 1){
			return "A";
		} else if(number>1&&number<11){
			return ""+number;
		}else return "wrong card";
	}

	public int getNumber(){
		if(number>0&&number<14)
			return number;
		else return -1;
	}

	public void compareTo(Card card) {
		if (card == null) System.out.println("something wrong with the card");    //if the card is null,return 2
		else if(card.getNumber() == this.getNumber())
			System.out.println("equal");
		else if( this.getNumber()<card.getNumber() ) 
			System.out.println("smaller");
		else if( this.getNumber()>card.getNumber() ) 
			System.out.println("bigger");
	}      
}



